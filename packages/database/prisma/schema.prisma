// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =================================================
// AUTH MODELS
// =================================================

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// =================================================
// APPLICATION MODELS
// =================================================

enum UserRole {
  CREATOR
  PROMOTER
  ADMIN
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  role          UserRole   @default(CREATOR)
  accounts      Account[]
  sessions      Session[]
  campaigns     Campaign[]
  promotions    Promotion[]
}

model Campaign {
  id          String      @id @default(cuid())
  name        String
  budget      Float
  creatorId   String
  creator     User        @relation(fields: [creatorId], references: [id])
  promotions  Promotion[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Promotion {
  id          String   @id @default(cuid())
  campaignId  String
  campaign    Campaign @relation(fields: [campaignId], references: [id])
  promoterId  String
  promoter    User     @relation(fields: [promoterId], references: [id])
  contentUrl  String
  views       Int      @default(0)
  earnings    Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}